generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           String            @id @default(uuid())
  name         String
  phone_number Float?
  address      String?
  password     String
  email        String            @unique
  avatar       Avatars?
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt
  role         tbtaikhoan_VaiTro @default(Admin)

  @@unique([email, phone_number], name: "uniquee_email_phone_number")
}

model SubUser {
  id            String               @id @default(uuid())
  name          String
  phone_number  Float?
  address       String?
  password      String
  email         String               @unique
  subAvatar     SubAvatars?
  createdAt     DateTime             @default(now())
  updatedAt     DateTime             @updatedAt
  role          tbtaikhoancon_VaiTro @default(SinhVien)
  DangKyHocPhan TbDangKyHocPhan[] 
  Diem TbDiem[]

  @@unique([email, phone_number], name: "uniquee_sub_email_phone_number")
}

model TbDiem {
  id         String   @id @default(uuid())
  MaHocPhan   String
  MaSinhVien String
  MaHoaDon   String?
  DiemGiuaKi Int      @db.Int
  DiemCuoiKi Int      @db.Int
  NgayThi    DateTime
  HocPhan TbHocPhan   @relation(fields: [MaHocPhan], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbdiem_mahocphan_foreign_key_idx")
  SinhVien   SubUser   @relation(fields: [MaSinhVien], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbdiem_masinhvien_foreign_key_idx")
    
    @@index([MaHocPhan], map: "MaHocPhan")
    @@index([MaSinhVien], map: "MaSinhVien")

}

model TbLichHoc {
  id                 String                       @id @default(uuid())
  MaGiangVien         String
  MaHocPhan          String
  MaPhongHoc         String
  ThoiGianHoc        DateTime
  StatusDeXemLichHoc tbSubUser_statusdexemlichhoc
  HocPhan TbHocPhan   @relation(fields: [MaHocPhan], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tblichhoc_mahocphan_foreign_key_idx")
  PhongHoc TbPhongHoc @relation(fields: [MaPhongHoc], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tblichhoc_maphonghoc_foreign_key_idx")
  GiangVien TbGiangVien @relation(fields: [MaGiangVien], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tblichhoc_magiangvien_foreign_key_idx")

    @@index([MaHocPhan], map: "MaHocPhan")
    @@index([MaPhongHoc], map: "MaPhongHoc")
    @@index([MaGiangVien], map: "MaGiangVien")
}

model TbPhongHoc {
  id          String            @id @default(uuid())
  TenPhongHoc String            @db.VarChar(255)
  Status      tbphonghoc_status @default(On)
  LichHoc TbLichHoc[]
}

model TbThoiGianDeDuyTriTrangDangKy {
  id              String   @id @default(uuid())
  ThoiGianBatDau  DateTime
  ThoiGianKetThuc DateTime
}

model TbDangKyHocPhan {
  id         String                     @id @default(uuid())
  MaSinhVien String
  MaHocPhan  String
  LyDoHocLai String?                    @db.Text
  NgayDangKy DateTime                   @default(now())
  DiemGiuaKi Int?                       @db.Int
  DiemCuoiKi Int?                       @db.Int
  NgayThi    DateTime?
  KieuDangKy tbdangkyhocphan_kieudangky
  HoaDon     TbHoaDon[]
  SinhVien   SubUser                    @relation(fields: [MaSinhVien], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbdangkyhocphan_masinhvien_foreign_key_idx")
  HocPhan    TbHocPhan                  @relation(fields: [MaHocPhan], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbdangkyhocphan_mahocphan_foreign_key_idx")

  @@index([MaSinhVien], map: "MaSinhVien")
  @@index([MaHocPhan], map: "MaHocPhan")
}

model TbGiangVien {
  id           String      @id @default(uuid())
  TenGiangVien String      @db.VarChar(255)
  email        String      @unique
  phone_number Float?
  LichHoc      TbLichHoc[]

  @@unique([email, phone_number], name: "uniquee_lecturers_email_phone_number")
}

model TbHocPhan {
  id            String            @id @default(uuid())
  TenHocPhan    String            @db.VarChar(255)
  SoTinChi      Int               @db.Int
  GiaCa         Decimal           @db.Decimal(20, 2)
  DangKyHocPhan TbDangKyHocPhan[]
  LichHoc TbLichHoc[]
  Diem TbDiem[]

}

model TbHoaDon {
  id                  String                        @id @default(uuid())
  MaDangKyHocPhan     String
  SoTienPhaiTra       Decimal                       @db.Decimal(20, 2)
  SoTienDaTra         Decimal                       @db.Decimal(20, 2)
  NgayBatDauThanhToan DateTime                      @default(now()) @db.Timestamp(0)
  PhuongThucThanhToan tbhoadon_PhuongThucThanhToan?
  GhiChu              String?                       @db.Text
  NgayThanhToanGanDay DateTime                      @updatedAt
  DangKyHocPhan       TbDangKyHocPhan               @relation(fields: [MaDangKyHocPhan], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbhoadon_madangkyhocphan_foreign_key_idx")

  @@index([MaDangKyHocPhan], map: "MaDangKyHocPhan")
}

model Avatars {
  id        String @id @default(uuid())
  public_id String
  url       String
  user      User   @relation(fields: [userId], references: [id])
  userId    String @unique
}

model SubAvatars {
  id        String  @id @default(uuid())
  public_id String
  url       String
  sub_user  SubUser @relation(fields: [subUserId], references: [id])
  subUserId String  @unique
}

enum tbtaikhoan_VaiTro {
  Admin
}

enum tbtaikhoancon_VaiTro {
  SinhVien
}

enum tbdangkyhocphan_kieudangky {
  HocLai
  HocGhep
}

enum tbphonghoc_status {
  On
  Off
}

enum tbhoadon_PhuongThucThanhToan {
  TienMat
  ChuyenKhoan
}

enum tbSubUser_statusdexemlichhoc {
  Active
  Close
}
